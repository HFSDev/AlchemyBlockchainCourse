const { sha256 } = require("ethereum-cryptography/sha256");
const { toHex, utf8ToBytes } = require("ethereum-cryptography/utils");

// the possible colors that the hash could represent
const COLORS = ['red', 'green', 'blue', 'yellow', 'pink', 'orange'];

console.log("Calculating rainbowTable...");
const rainbowTable = Object.fromEntries(COLORS.map(col => [sha256(utf8ToBytes(col)).toString(), col]));
console.log("RainbowTable calculated...");
// given a hash, return the color that created the hash
function findColor(hash) {
    return rainbowTable[hash.toString()];
}

module.exports = findColor;

const secp = require("ethereum-cryptography/secp256k1");
const { keccak256 } = require("ethereum-cryptography/keccak");

function getAddress(publicKey) {
    let pubHash = keccak256(publicKey.slice(1));

    return pubHash.slice(pubHash.length - 20);
}

module.exports = getAddress;